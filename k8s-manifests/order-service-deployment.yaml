apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: devops-portfolio
  labels:
    app: order-service
    component: backend
    tier: microservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
        component: backend
        tier: microservice
    spec:
      containers:
      - name: order-service
        image: order-service:latest
        imagePullPolicy: Never  # Use local image
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: PORT
          value: "8081"
        - name: USER_SERVICE_URL
          value: "http://user-service"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: devops-portfolio
  labels:
    app: order-service
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8081
    protocol: TCP
    name: http
  selector:
    app: order-service 